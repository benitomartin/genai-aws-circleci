version: 2.1

orbs:
  python: circleci/python@3.0.0
  aws-cli: circleci/aws-cli@5.2.0
  sam: circleci/aws-sam-serverless@5.0

jobs:
  build-deploy:
    docker:
      - image: cimg/python:3.11
    steps:
      - checkout  # Checkout the code from the repository
  
      # # Use python orb to set up the environment properly
      # - python/install-packages:
      #     pkg-manager: pip

      - aws-cli/setup:
          profile_name: default
      - sam/install  # Use the SAM orb to install SAM CLI
      
      - run:
          name: Install uv
          command: curl -LsSf https://astral.sh/uv/install.sh | sh  # Install uv package
        
      # Create symlink to python3.11
      - run:
          name: Set up Python symlinks
          command: |
            which python3.11
            sudo ln -sf $(which python3.11) /usr/local/bin/python3.11
            python3.11 --version

      - run:
          name: Install the project
          command: uv sync   # Sync the project using uv

      - run:
          name: Run tests
          command: uv run pytest  # Run pytest tests

      # # Using AWS CLI orb for setup instead of manual installation
      # - aws-cli/setup:
      #     profile_name: default
      
      # - run:
      #     name: Install AWS SAM CLI
      #     command: |
      #       # Download and install AWS SAM CLI for Linux
      #       curl -Lo sam-cli-linux-x86_64.zip https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip
      #       unzip sam-cli-linux-x86_64.zip -d sam-installation  # Unzip the SAM CLI
      #       sudo ./sam-installation/install  # Run the SAM CLI installation script

      - run:
          name: Build Lambda Deployment Package
          command: |
            chmod +x build-sam.sh
            ./build-sam.sh  # Execute the build script

      - run:
          name: Build with SAM
          command: sam build  # Build with SAM
      
      - run:
          name: Verify AWS Credentials
          command: |
            aws sts get-caller-identity  # Verify AWS credentials are set up correctly

      - run:
          name: Deploy with SAM
          command: |
            sam deploy --stack-name sam-app --resolve-s3 --capabilities CAPABILITY_IAM --region eu-central-1  # Deploy with SAM

      - run:
          name: Output API Gateway URL
          command: |
            API_URL=$(aws cloudformation describe-stacks --stack-name sam-app --region eu-central-1)
            echo "GenAI API URL: $API_URL"  # Output the API Gateway URL

workflows:
  version: 2
  deploy:
    jobs:
      - build-deploy:
          context: aws  # Add this to use AWS credentials from CircleCI context
